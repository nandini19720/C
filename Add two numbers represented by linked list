/* node for linked list

class Node {
    int data;
    Node next;

    Node(int d) {
        data = d;
        next = null;
    }
}

*/

class Solution{
    public static Node reverse(Node head){
        if(head==null||head.next==null){
            return head;
        }
        Node curr=head;
        Node prev=null;
        Node next=null;
        while(curr!=null){
            next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
    //Function to add two numbers represented by linked list.
    static Node addTwoLists(Node first, Node second){
        if(first==null || second==null){
            return first!=null?first:second;
        }
        Node c1=reverse(first);
        Node c2=reverse(second);
        Node head=new Node(-1);
        Node itr=head;
        int carry=0;
        while(c1!=null||c2!=null||carry!=0){
            int sum=carry+(c1!=null?c1.data:0)+(c2!=null?c2.data:0);
            int digit=sum%10;
            carry=sum/10;
            itr.next=new Node(digit);
            itr=itr.next;
            if(c1!=null)c1=c1.next;
            if(c2!=null)c2=c2.next;
        }
        return reverse(head.next);
       
        
        // return head of sum list
    }
}
